name: Build APK (Expo EAS)

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install EAS CLI
        run: npm install -g eas-cli@latest

      - name: Install dependencies
        run: npm ci

      - name: Get Android package name
        id: package_name
        run: |
          # Ekstrak nama package dari app.json atau app.config.js
          if [ -f "app.json" ]; then
            PACKAGE_NAME=$(node -e "console.log(require('./app.json').expo.android.package || '')")
          elif [ -f "app.config.js" ]; then
            PACKAGE_NAME=$(node -e "console.log(require('./app.config.js').default.expo.android.package || '')")
          fi
          
          # Jika tidak ditemukan, gunakan default atau gagalkan
          if [ -z "$PACKAGE_NAME" ]; then
            echo "Package name not found, using default"
            PACKAGE_NAME="com.example.app"
          fi
          
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Run expo prebuild
        run: npx expo prebuild --clean

      - name: Fix Android autolinking and configuration
        run: |
          # Pastikan settings.gradle memiliki autolinking yang benar
          cat > android/settings.gradle << EOL
rootProject.name = '${{ env.PACKAGE_NAME }}'
apply from: new File(["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim(), "../scripts/autolinking.gradle")
useExpoModules()
include ':app'
EOL

          # Pastikan compileSdkVersion dan targetSdkVersion diatur ke 35
          sed -i 's/compileSdkVersion [0-9]\+/compileSdkVersion 35/' android/app/build.gradle
          sed -i 's/targetSdkVersion [0-9]\+/targetSdkVersion 35/' android/app/build.gradle
          
          # Tambahkan buildTypes jika tidak ada
          if ! grep -q "buildTypes" android/app/build.gradle; then
            cat >> android/app/build.gradle << EOL

android {
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
}
EOL
          fi

      - name: Verify Android configuration
        run: |
          echo "=== settings.gradle content ==="
          cat android/settings.gradle
          echo ""
          echo "=== app/build.gradle (compileSdk & targetSdk) ==="
          grep -E "(compileSdkVersion|targetSdkVersion)" android/app/build.gradle || true
          echo ""
          echo "=== app/build.gradle (buildTypes) ==="
          grep -A 10 "buildTypes" android/app/build.gradle || true

      - name: Build APK with EAS
        run: |
          eas build --platform android --non-interactive --profile development --json > build-output.json
          BUILD_STATUS=$(jq -r '.[0].status' build-output.json)
          DOWNLOAD_URL=$(jq -r '.[0].artifacts.buildUrl' build-output.json)
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
          if [ "$BUILD_STATUS" != "finished" ]; then
            echo "Build failed with status: $BUILD_STATUS"
            cat build-output.json
            exit 1
          fi
        env:
          EXPO_TOKEN: ${{ secrets.TEST }}

      - name: Download APK from Expo
        run: |
          mkdir -p build-apk
          curl -L "$DOWNLOAD_URL" -o build-apk/app.apk

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: konter-app-apk
          path: build-apk/app.apk
